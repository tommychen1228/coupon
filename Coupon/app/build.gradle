buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.+'
    }
}

apply plugin: 'com.android.application'

repositories {
    jcenter()
}

android {
    compileSdkVersion 22
    buildToolsVersion "23.0.1"

    defaultConfig {
        applicationId "com.myideaway.coupon"
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':pull-to-refresh')
    compile project(':zxing-android')
    compile 'com.squareup.okhttp:okhttp:2.1.0'
    compile 'commons-lang:commons-lang:2.6'
    compile 'org.puremvc:PureMVC_Java_MultiCore:1.0.7'
    compile 'org.roboguice:roboguice:3.+'
    compile 'com.android.support:support-v4:21.+'
}

task copyNativeLibs(type: Copy) {
    from(new File(project(':app').getProjectDir(), 'libs')) { include '**/*.so' }
    into new File(buildDir, 'native-libs')
}



tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn copyNativeLibs
}


clean.dependsOn 'cleanCopyNativeLibs'


tasks.withType(com.android.build.gradle.tasks.PackageApplication) {
    pkgTask ->
        pkgTask.jniFolders = new HashSet<File>()
        pkgTask.jniFolders.add(new File(buildDir, 'native-libs'))
}

